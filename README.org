#+TITLE: Explorando formalizaciones con Lean
#+OPTIONS: num:t

Estas son las notas de la lectura del libro de [[https://loeh.app.uni-regensburg.de/index.html][Clara Löh]] titulado
[[https://loeh.app.uni-regensburg.de/mapa/main.pdf][Exploring formalisation (A primer in human-readable mathematics in Lean
3 with examples from simplicial topology)]] cuyo código se encuentra en
[[https://gitlab.com/polywuisch/mapa_notes][GitLab]].

* Contenido                                                             :TOC:
- [[#introducción][Introducción]]
- [[#el-sistema-de-demostración-lean][El sistema de demostración Lean]]
  - [[#sistemas-de-demostración][Sistemas de demostración]]
  - [[#fundamentos][Fundamentos]]
  - [[#tipos][Tipos]]
  - [[#demostraciones][Demostraciones]]
  - [[#ejercicios][Ejercicios]]
- [[#ejemplos-básicos][Ejemplos básicos]]
  - [[#aplicaciones-inyectivas-y-suprayectivas][Aplicaciones inyectivas y suprayectivas]]
  - [[#inducción][Inducción]]
  - [[#conmutadores][Conmutadores]]
  - [[#el-cero-real][El cero real]]
  - [[#ejercicios-1][Ejercicios]]
- [[#opciones-de-diseño][Opciones de diseño]]
  - [[#diseño-recursivo][Diseño recursivo]]
  - [[#complejos-simpliciales][Complejos simpliciales]]
  - [[#aplicaciones-simpliciales][Aplicaciones simpliciales]]
  - [[#complejos-simpliciales-finitos][Complejos simpliciales finitos]]
  - [[#generación-de-complejos-simpliciales][Generación de complejos simpliciales]]
  - [[#combinación-de-complejos-simpliciales][Combinación de complejos simpliciales]]
  - [[#la-característica-de-euler][La característica de Euler]]
  - [[#hacia-una-biblioteca][Hacia una biblioteca]]
  - [[#ejercicios-2][Ejercicios]]
- [[#abstracción-y-prototipado][Abstracción y prototipado]]
  - [[#formalización-directa-seminormas-functoriales][Formalización directa: Seminormas functoriales]]
  - [[#formalización-indirecta-multiplicidad-susceptible][Formalización indirecta: Multiplicidad susceptible]]

* Introducción

+ La formalización de las matemáticas en un asistente de pruebas tiene
  los siguientes beneficios:
  + La implementación de las matemáticas requiere un conocimiento muy
    profundo de del tema y de todos los casos extremos. Por lo tanto,
    una formalización exitosa permite un mejor conocimiento de los
    detalles.
  + Una formalización en un asistente de pruebas puede conducir a un
    código ejecutable y, por tanto ofrece la oportunidad de realizar
    experimentos con ejemplos concretos.
  + Los asistentes de pruebas fomentan la abstracción. A menudo es más
    fácil formalizar conceptos de forma declarativa a través de
    propiedades universales en lugar de construcciones concretas y
    potencialmente engorrosas. Esto puede conducir a una una visión más
    clara de las cuestiones e ideas fundamentales.
  + Interactuar con un asistente de pruebas es divertido y adictivo.

+ Si los estudiantes aprenden las técnicas básicas de demostración a
  través de un asistente de pruebas, pueden obtener una
  retroalimentación inmediata y pueden experimentar con pruebas y
  ejemplos. Además, los estudiantes pueden ver en términos más prácticos
  cómo las abstracciones simplifican la vida matemática.
  
* El sistema de demostración Lean

** Sistemas de demostración

** Fundamentos

** Tipos

** Demostraciones

** Ejercicios   
  
* Ejemplos básicos

** Aplicaciones inyectivas y suprayectivas

** Inducción

** Conmutadores

** El cero real

** Ejercicios   

* Opciones de diseño

** Diseño recursivo

** Complejos simpliciales

** Aplicaciones simpliciales

** Complejos simpliciales finitos

** Generación de complejos simpliciales

** Combinación de complejos simpliciales

** La característica de Euler

** Hacia una biblioteca

** Ejercicios

* Abstracción y prototipado

** Formalización directa: Seminormas functoriales

** Formalización indirecta: Multiplicidad susceptible


   
